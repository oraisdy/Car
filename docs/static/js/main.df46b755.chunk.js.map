{"version":3,"sources":["components/Hero.js","components/Road.js","config/index.js","components/Participants.js","utils/index.js","components/TrafficLight.js","App.js","serviceWorker.js","index.js"],"names":["Hero","document","addEventListener","this","handleKeyDown","bind","e","_this$props","props","heroPos","heroState","preventDefault","keyCode","onPosChange","Math","max","min","onStateChange","_this$props2","isHit","gameState","lifeInformer","react_default","a","createElement","className","concat","React","Component","Road","HERO_HEIGHT","CLIENT_HEIGHT","window","innerHeight","HERO_CLIENT_Y","MAX_PAITICIPANTS_NUMBER","MAX_LIFE_NUMBER","HIT_INTERVAL","Participants","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","trafficLoop","rand","round","random","timeout","setTimeout","createTraffic","_this$state","state","currentCarId","participants","length","setState","toConsumableArray","onFinish","id","filter","pid","onLose","lastTime","_this2","cars","map","Participants_Car","carId","key","Car","_this3","mainLoop","y","carRef","current","getBoundingClientRect","top","carPos","carSpeed","style","animationId","requestAnimationFrame","floor","createRef","cancelAnimationFrame","ref","getComputedTranslateY","obj","getComputedStyle","transform","webkitTransform","mozTransform","mat","match","parseFloat","split","TrafficLight","trafficType","trafficLightRef","trafficLightId","intervalId","setInterval","clearInterval","join","App","increseKilometers","kilometers","throttledChangeInformer","canRun","gameOver","startGame","restartGame","loseLife","Road_Road","Hero_Hero","pos","TrafficLight_TrafficLight","onGameOver","Participants_Participants","onClick","Boolean","location","hostname","ReactDOM","render","App_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.df46b755.chunk.js","sourcesContent":["import React from \"react\";\n\nexport default class Hero extends React.Component {\n  componentDidMount() {\n    document.addEventListener(\"keydown\", this.handleKeyDown.bind(this), false);\n  }\n  handleKeyDown(e) {\n    const { heroPos, heroState } = this.props;\n    e.preventDefault();\n    switch (e.keyCode) {\n      case 37: // 左\n        heroState === 1 && this.props.onPosChange(Math.max(0, heroPos - 1));\n        break;\n      case 39: // 右\n        heroState === 1 && this.props.onPosChange(Math.min(heroPos + 1, 1));\n        break;\n      case 38: // 上\n        this.props.onStateChange(1);\n        break;\n      case 40: // 下\n        this.props.onStateChange(0);\n        break;\n      default:\n        break;\n    }\n  }\n  render() {\n    const { heroPos, isHit, gameState, lifeInformer } = this.props;\n    return (\n      <div>\n        {gameState === 1 && (\n          <div\n            className={`hero ${heroPos === 0 ? \"left\" : \"right\"} ${\n              isHit ? \"twinkling\" : \"\"\n            }`}\n          >\n            <div className={`life life${lifeInformer}`} />\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nexport default class Road extends React.Component {\n  render() {\n    const { heroState } = this.props;\n    return (\n      <div className={`road ${heroState === 1 ? \"running\" : \"paused\"}`}>\n        <div\n          className={`road-col road-col-1 ${\n            heroState === 1 ? \"running\" : \"paused\"\n          }`}\n        />\n        <div\n          className={`road-col road-col-2 ${\n            heroState === 1 ? \"running\" : \"paused\"\n          }`}\n        />\n        <div\n          className={`road-col road-col-3 ${\n            heroState === 1 ? \"running\" : \"paused\"\n          }`}\n        />\n        <div\n          className={`road-col road-col-4 ${\n            heroState === 1 ? \"running\" : \"paused\"\n          }`}\n        />\n        <div\n          className={`road-col road-col-5 ${\n            heroState === 1 ? \"running\" : \"paused\"\n          }`}\n        />\n      </div>\n    );\n  }\n}\n","export const HERO_HEIGHT = 90;\nexport const CLIENT_HEIGHT = Math.min(window.innerHeight, 650);\nexport const HERO_CLIENT_Y = CLIENT_HEIGHT - HERO_HEIGHT;\nexport const MAX_PAITICIPANTS_NUMBER = 3;\nexport const MAX_LIFE_NUMBER = 3;\nexport const HIT_INTERVAL = 1000;\n","import React from \"react\";\nimport {\n  HERO_CLIENT_Y,\n  CLIENT_HEIGHT,\n  HERO_HEIGHT,\n  MAX_PAITICIPANTS_NUMBER\n} from \"../config\";\n// const fps = 30;\nexport default class Participants extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      participants: [],\n      currentCarId: 0\n    };\n    this.lastTime = 0;\n  }\n\n  componentDidMount() {\n    this.trafficLoop();\n    // this.mainLoop();\n  }\n  // mainLoop = time => {\n  //   requestAnimationFrame(this.mainLoop);\n  //   if (time - this.lastTime < 1000 / fps) {\n  //     return;\n  //   }\n  //   let realFPS = 1000 / (time - this.lastTime);\n  //   console.log(\"real fps\", realFPS);\n  //   // do something\n  //   this.lastTime = time;\n  // };\n  trafficLoop = () => {\n    const rand = Math.round(Math.random() * 6000) + 1000;\n    this.timeout = setTimeout(() => {\n      this.createTraffic();\n      this.trafficLoop();\n    }, rand);\n  };\n\n  createTraffic = () => {\n    const { gameState } = this.props;\n    const { currentCarId, participants } = this.state;\n    if (gameState === 1 && participants.length < MAX_PAITICIPANTS_NUMBER) {\n      this.setState({\n        participants: [...participants, currentCarId + 1],\n        currentCarId: currentCarId + 1\n      });\n    }\n  };\n\n  onFinish = id => {\n    this.setState({\n      participants: this.state.participants.filter(pid => pid !== id)\n    });\n  };\n\n  onLose = id => {\n    this.onFinish(id);\n    this.props.onLose();\n  };\n\n  render() {\n    const { participants } = this.state;\n    const cars = participants.map(pid => (\n      <Car\n        carId={pid}\n        key={pid}\n        onFinish={this.onFinish}\n        onLose={this.onLose}\n        heroPos={this.props.heroPos}\n        heroState={this.props.heroState}\n      />\n    ));\n    return <div>{cars}</div>;\n  }\n}\n\nclass Car extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      carSpeed: Math.random() * 3 + 3,\n      carPos: Math.floor(Math.random() * 2),\n      isHit: false\n    };\n    this.carRef = React.createRef();\n    this.animationId = null;\n  }\n  componentDidMount() {\n    this.animationId = requestAnimationFrame(this.mainLoop);\n  }\n  componentWillUnmount() {\n    this.animationId && cancelAnimationFrame(this.animationId);\n  }\n  mainLoop = () => {\n    const y = this.carRef.current.getBoundingClientRect().top;\n    if (y >= CLIENT_HEIGHT) {\n      this.props.onFinish(this.props.carId);\n    } else if (\n      this.state.carPos === this.props.heroPos &&\n      y >= HERO_CLIENT_Y - HERO_HEIGHT\n    ) {\n      // console.log(\"crash\", y, CLIENT_HEIGHT, HERO_CLIENT_Y);\n      this.props.onLose(this.props.carId);\n    } else {\n      let top = y + this.state.carSpeed;\n      if (this.props.heroState === 1) {\n        top += 3;\n      }\n      this.carRef.current.style.top = top + \"px\";\n      this.animationId = requestAnimationFrame(this.mainLoop);\n    }\n  };\n\n  render() {\n    const posList = [\"left\", \"right\"];\n    const { carPos } = this.state;\n    return <div className={`car ${posList[carPos]}`} ref={this.carRef} />;\n  }\n}\n","export const getComputedTranslateY = obj => {\n  if (!window.getComputedStyle) return;\n  var style = getComputedStyle(obj),\n    transform = style.transform || style.webkitTransform || style.mozTransform;\n  var mat = transform.match(/^matrix3d\\((.+)\\)$/);\n  if (mat) return parseFloat(mat[1].split(\", \")[13]);\n  mat = transform.match(/^matrix\\((.+)\\)$/);\n  return mat ? parseFloat(mat[1].split(\", \")[5]) : 0;\n};\n","import React from \"react\";\nimport { getComputedTranslateY } from \"../utils\";\nimport { HERO_CLIENT_Y } from \"../config\";\nimport { setInterval } from \"timers\";\nexport default class TrafficLight extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      trafficType: 0, // 0绿灯，1红灯，2黄灯\n      trafficLightId: 0,\n      isHit: false\n    };\n    this.trafficLightRef = React.createRef();\n    this.intervalId = null;\n  }\n  componentDidMount() {\n    this.trafficLoop();\n    this.intervalId = setInterval(() => {\n      this.mainLoop();\n    }, 10);\n    setInterval(() => {\n      this.setState({\n        trafficType: (this.state.trafficType + 1) % 3\n      });\n    }, 2000);\n  }\n  componentWillUnmount() {\n    clearInterval(this.intervalId);\n  }\n\n  mainLoop = () => {\n    const { heroState, gameState } = this.props;\n    const { trafficType } = this.state;\n    if (\n      gameState === 1 &&\n      heroState === 1 &&\n      trafficType !== 0 &&\n      this.trafficLightRef.current &&\n      getComputedTranslateY(this.trafficLightRef.current) >= HERO_CLIENT_Y\n    ) {\n      this.props.onLose();\n      this.setState({ isHit: true });\n    }\n  };\n  trafficLoop = () => {\n    const rand = Math.round(Math.random() * 6000) + 3000;\n    this.timeout = setTimeout(() => {\n      this.createTraffic();\n      this.trafficLoop();\n    }, rand);\n  };\n\n  createTraffic = () => {\n    const { heroState, gameState } = this.props;\n    if (gameState === 1 && heroState === 1) {\n      this.setState({\n        trafficLightId: this.state.trafficLightId + 1,\n        isHit: false\n      });\n    }\n  };\n\n  render() {\n    const trafficTypes = [\"green\", \"red\", \"yellow\"];\n    const { trafficLightId, trafficType, isHit } = this.state;\n    const { heroState } = this.props;\n    return (\n      <div>\n        {trafficLightId > 0 && (\n          <div\n            className={[\n              \"trafficlight\",\n              heroState === 1 ? \"running\" : \"paused\",\n              trafficTypes[trafficType],\n              isHit ? \"twinkling\" : \"\"\n            ].join(\" \")}\n            key={trafficLightId}\n            ref={this.trafficLightRef}\n          />\n        )}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport \"./App.scss\";\nimport Hero from \"./components/Hero\";\nimport Road from \"./components/Road\";\nimport Participants from \"./components/Participants\";\nimport TrafficLight from \"./components/TrafficLight\";\nimport { MAX_LIFE_NUMBER, HIT_INTERVAL } from \"./config\";\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      gameState: -1, // 0结束，1行驶，-1未开始\n      heroPos: 0, // 0左，1右\n      heroState: 1, // 0停止，1行驶\n      lifeInformer: MAX_LIFE_NUMBER,\n      isHit: false,\n      kilometers: 0\n    };\n    this.loseLife = this.throttledChangeInformer();\n    this.intervalId = null;\n  }\n\n  componentDidMount() {\n    this.increseKilometers();\n  }\n  componentWillUnmount() {\n    this.intervalId && clearInterval(this.intervalId);\n  }\n  increseKilometers = () => {\n    this.intervalId = setInterval(() => {\n      if (this.state.gameState === 1 && this.state.heroState === 1) {\n        this.setState({ kilometers: this.state.kilometers + 1 });\n      }\n    }, 2000);\n  };\n\n  throttledChangeInformer = () => {\n    let canRun = true;\n    return () => {\n      if (!canRun) return;\n      canRun = false;\n      this.setState({ isHit: true });\n      if (this.state.lifeInformer <= 0) {\n        this.gameOver();\n      }\n      this.setState({\n        lifeInformer: this.state.lifeInformer - 1\n      });\n      setTimeout(() => {\n        canRun = true;\n        this.setState({\n          isHit: false\n        });\n      }, HIT_INTERVAL);\n    };\n  };\n  gameOver = () => {\n    this.setState({ gameState: 0 });\n  };\n  startGame = () => {\n    this.setState({ gameState: 1 });\n  };\n  restartGame = () => {\n    this.setState({\n      gameState: 1,\n      heroPos: 0, // 0左，1右\n      heroState: 1, // 0停止，1行驶\n      lifeInformer: MAX_LIFE_NUMBER,\n      isHit: false,\n      kilometers: 0\n    });\n  };\n  render() {\n    const {\n      gameState,\n      heroState,\n      heroPos,\n      lifeInformer,\n      isHit,\n      kilometers\n    } = this.state;\n    return (\n      <div>\n        <div className=\"container\">\n          <Road heroState={heroState} />\n          {gameState === 1 && <div className=\"informer\">{kilometers}</div>}\n          <Hero\n            isHit={isHit}\n            gameState={gameState}\n            heroState={heroState}\n            heroPos={heroPos}\n            lifeInformer={lifeInformer}\n            onStateChange={state => {\n              this.setState({ heroState: state });\n            }}\n            onPosChange={pos => {\n              this.setState({ heroPos: pos });\n            }}\n          />\n          <TrafficLight\n            gameState={gameState}\n            heroState={heroState}\n            onLose={this.loseLife}\n            onGameOver={this.gameOver}\n          />\n          <Participants\n            gameState={gameState}\n            heroPos={heroPos}\n            heroState={heroState}\n            onLose={this.loseLife}\n            onGameOver={this.gameOver}\n          />\n          {gameState === -1 && (\n            <div className=\"startgame\" onClick={this.startGame} />\n          )}\n          {gameState === 0 && (\n            <div className=\"gameover\">\n              <ul>\n                {/* <li className=\"title\">游戏结束</li> */}\n                <li>你的成绩：{kilometers} km</li>\n                <li onClick={this.restartGame}>\n                  <span className=\"restartgame\" />\n                </li>\n              </ul>\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App.js\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}