{"version":3,"sources":["components/Hero.js","components/Road.js","config/index.js","components/Participants.js","utils/index.js","components/TrafficLight.js","App.js","serviceWorker.js","index.js"],"names":["Hero","document","addEventListener","this","handleKeyDown","bind","removeEventListener","e","_this$props","props","heroPos","heroState","preventDefault","keyCode","onPosChange","Math","max","min","onStateChange","_this$props2","isHit","gameState","lifeInformer","react_default","a","createElement","className","join","concat","React","Component","Road","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","mainLoop","time","requestAnimationFrame","roadRef","current","top","getBoundingClientRect","style","updateCols","_this$state","state","roadCol1","roadCol5","unshift","key","pop","getRandomClassName","setState","roadCol2","Array","fill","map","_","i","roadCol4","createRef","_this$state2","ref","r","random","HERO_HEIGHT","CLIENT_HEIGHT","window","innerHeight","HERO_CLIENT_Y","MAX_PAITICIPANTS_NUMBER","MAX_LIFE_NUMBER","HIT_INTERVAL","Participants","trafficLoop","rand","round","timeout","setTimeout","createTraffic","currentCarId","participants","length","toConsumableArray","onFinish","id","filter","pid","onLose","lastTime","_this2","cars","Participants_Car","carId","Car","_this3","y","carRef","carPos","carSpeed","animationId","floor","cancelAnimationFrame","getComputedTranslateY","obj","getComputedStyle","transform","webkitTransform","mozTransform","mat","match","parseFloat","split","TrafficLight","trafficType","trafficLightRef","trafficLightId","intervalId","setInterval","clearInterval","App","increseKilometers","kilometers","throttledChangeInformer","canRun","gameOver","startGame","restartGame","loseLife","Road_Road","Hero_Hero","pos","TrafficLight_TrafficLight","onGameOver","Participants_Participants","onClick","Boolean","location","hostname","ReactDOM","render","App_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3adb6750.chunk.js","sourcesContent":["import React from \"react\";\n\nexport default class Hero extends React.Component {\n  componentDidMount() {\n    document.addEventListener(\"keydown\", this.handleKeyDown.bind(this), false);\n  }\n  componentWillUnmount() {\n    document.removeEventListener(\"keydown\", this.handleKeyDown.bind(this));\n  }\n  handleKeyDown(e) {\n    const { heroPos, heroState } = this.props;\n    e.preventDefault();\n    switch (e.keyCode) {\n      case 37: // 左\n        heroState === 1 && this.props.onPosChange(Math.max(0, heroPos - 1));\n        break;\n      case 39: // 右\n        heroState === 1 && this.props.onPosChange(Math.min(heroPos + 1, 1));\n        break;\n      case 38: // 上\n        this.props.onStateChange(1);\n        break;\n      case 40: // 下\n        this.props.onStateChange(0);\n        break;\n      default:\n        break;\n    }\n  }\n  render() {\n    const { heroPos, isHit, gameState, lifeInformer } = this.props;\n    return (\n      <div\n        className={[\n          \"hero\",\n          heroPos === 0 ? \"left\" : \"right\",\n          isHit ? \"twinkling\" : \"\",\n          gameState === 1 ? \"\" : \"hidden\"\n        ].join(\" \")}\n      >\n        <div className={`life life${lifeInformer}`} />\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nexport default class Road extends React.Component {\n  constructor(props) {\n    super(props);\n    const roadCol2 = new Array(10)\n      .fill(0)\n      .map((_, i) => <div key={i} className=\"road-block road-block-road1\" />);\n    const roadCol4 = new Array(10)\n      .fill(0)\n      .map((_, i) => <div key={i} className=\"road-block road-block-road3\" />);\n    const roadCol1 = new Array(10)\n      .fill(0)\n      .map((_, i) => <div key={i} className={getRandomClassName()} />);\n    const roadCol5 = new Array(10)\n      .fill(0)\n      .map((_, i) => <div key={i} className={getRandomClassName()} />);\n\n    this.state = {\n      roadCol1,\n      roadCol2,\n      roadCol4,\n      roadCol5\n    };\n    this.roadRef = React.createRef();\n  }\n  componentDidMount() {\n    requestAnimationFrame(this.mainLoop);\n  }\n\n  mainLoop = time => {\n    requestAnimationFrame(this.mainLoop);\n    if (this.props.heroState === 1 && this.roadRef.current) {\n      const top = this.roadRef.current.getBoundingClientRect().top;\n      this.roadRef.current.style.top = top + 3 + \"px\";\n      if (top >= 0) {\n        this.updateCols();\n        this.roadRef.current.style.top = \"-128px\";\n      }\n    }\n  };\n\n  updateCols = () => {\n    let { roadCol1, roadCol5 } = this.state;\n    roadCol1.unshift(\n      <div key={roadCol1.pop().key} className={getRandomClassName()} />\n    );\n    roadCol5.unshift(\n      <div key={roadCol5.pop().key} className={getRandomClassName()} />\n    );\n    this.setState({ roadCol1, roadCol5 });\n  };\n\n  render() {\n    const { roadCol5, roadCol1, roadCol2, roadCol4 } = this.state;\n    return (\n      <div className=\"road\" ref={this.roadRef}>\n        <div className=\"road-col road-col-1\">{roadCol1}</div>\n        <div className=\"road-col road-col-2\">{roadCol2}</div>\n        <div className=\"road-col road-col-3\" />\n        <div className=\"road-col road-col-4\">{roadCol4}</div>\n        <div className=\"road-col road-col-5\">{roadCol5}</div>\n      </div>\n    );\n  }\n}\nconst getRandomClassName = () => {\n  const r = Math.random();\n  if (r < 0.3) {\n    return \"road-block road-block-tree1\";\n  } else if (r < 0.6) {\n    return \"road-block road-block-tree2\";\n  } else if (r < 0.7) {\n    return \"road-block road-block-tent\";\n  } else {\n    return \"road-block\";\n  }\n};\n","export const HERO_HEIGHT = 90;\nexport const CLIENT_HEIGHT = Math.min(window.innerHeight, 640);\nexport const HERO_CLIENT_Y = CLIENT_HEIGHT - HERO_HEIGHT;\nexport const MAX_PAITICIPANTS_NUMBER = 3;\nexport const MAX_LIFE_NUMBER = 3;\nexport const HIT_INTERVAL = 1000;\n","import React from \"react\";\nimport {\n  HERO_CLIENT_Y,\n  CLIENT_HEIGHT,\n  HERO_HEIGHT,\n  MAX_PAITICIPANTS_NUMBER\n} from \"../config\";\n// const fps = 30;\nexport default class Participants extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      participants: [],\n      currentCarId: 0\n    };\n    this.lastTime = 0;\n  }\n\n  componentDidMount() {\n    this.trafficLoop();\n    // this.mainLoop();\n  }\n  // mainLoop = time => {\n  //   requestAnimationFrame(this.mainLoop);\n  //   if (time - this.lastTime < 1000 / fps) {\n  //     return;\n  //   }\n  //   let realFPS = 1000 / (time - this.lastTime);\n  //   console.log(\"real fps\", realFPS);\n  //   // do something\n  //   this.lastTime = time;\n  // };\n  trafficLoop = () => {\n    const rand = Math.round(Math.random() * 6000) + 1000;\n    this.timeout = setTimeout(() => {\n      this.createTraffic();\n      this.trafficLoop();\n    }, rand);\n  };\n\n  createTraffic = () => {\n    const { gameState } = this.props;\n    const { currentCarId, participants } = this.state;\n    if (gameState === 1 && participants.length < MAX_PAITICIPANTS_NUMBER) {\n      this.setState({\n        participants: [...participants, currentCarId + 1],\n        currentCarId: currentCarId + 1\n      });\n    }\n  };\n\n  onFinish = id => {\n    this.setState({\n      participants: this.state.participants.filter(pid => pid !== id)\n    });\n  };\n\n  onLose = id => {\n    this.onFinish(id);\n    this.props.onLose();\n  };\n\n  render() {\n    const { participants } = this.state;\n    const cars = participants.map(pid => (\n      <Car\n        carId={pid}\n        key={pid}\n        onFinish={this.onFinish}\n        onLose={this.onLose}\n        heroPos={this.props.heroPos}\n        heroState={this.props.heroState}\n      />\n    ));\n    return <div>{cars}</div>;\n  }\n}\n\nclass Car extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      carSpeed: Math.random() * 3 + 3,\n      carPos: Math.floor(Math.random() * 2),\n      isHit: false\n    };\n    this.carRef = React.createRef();\n    this.animationId = null;\n  }\n  componentDidMount() {\n    this.animationId = requestAnimationFrame(this.mainLoop);\n  }\n  componentWillUnmount() {\n    this.animationId && cancelAnimationFrame(this.animationId);\n  }\n  mainLoop = () => {\n    const y = this.carRef.current.getBoundingClientRect().top;\n    if (y >= CLIENT_HEIGHT) {\n      this.props.onFinish(this.props.carId);\n    } else if (\n      this.state.carPos === this.props.heroPos &&\n      y >= HERO_CLIENT_Y - HERO_HEIGHT\n    ) {\n      // console.log(\"crash\", y, CLIENT_HEIGHT, HERO_CLIENT_Y);\n      this.props.onLose(this.props.carId);\n    } else {\n      let top = y + this.state.carSpeed;\n      if (this.props.heroState === 1) {\n        top += 3;\n      }\n      this.carRef.current.style.top = top + \"px\";\n      this.animationId = requestAnimationFrame(this.mainLoop);\n    }\n  };\n\n  render() {\n    const posList = [\"left\", \"right\"];\n    const { carPos } = this.state;\n    return <div className={`car ${posList[carPos]}`} ref={this.carRef} />;\n  }\n}\n","export const getComputedTranslateY = obj => {\n  if (!window.getComputedStyle) return;\n  var style = getComputedStyle(obj),\n    transform = style.transform || style.webkitTransform || style.mozTransform;\n  var mat = transform.match(/^matrix3d\\((.+)\\)$/);\n  if (mat) return parseFloat(mat[1].split(\", \")[13]);\n  mat = transform.match(/^matrix\\((.+)\\)$/);\n  return mat ? parseFloat(mat[1].split(\", \")[5]) : 0;\n};\n","import React from \"react\";\nimport { getComputedTranslateY } from \"../utils\";\nimport { HERO_CLIENT_Y } from \"../config\";\nimport { setInterval } from \"timers\";\nexport default class TrafficLight extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      trafficType: 0, // 0绿灯，1红灯，2黄灯\n      trafficLightId: 0,\n      isHit: false\n    };\n    this.trafficLightRef = React.createRef();\n    this.intervalId = null;\n  }\n  componentDidMount() {\n    this.trafficLoop();\n    this.intervalId = setInterval(() => {\n      this.mainLoop();\n    }, 10);\n    setInterval(() => {\n      this.setState({\n        trafficType: (this.state.trafficType + 1) % 3\n      });\n    }, 2000);\n  }\n  componentWillUnmount() {\n    clearInterval(this.intervalId);\n  }\n\n  mainLoop = () => {\n    const { heroState, gameState } = this.props;\n    const { trafficType } = this.state;\n    if (\n      gameState === 1 &&\n      heroState === 1 &&\n      trafficType !== 0 &&\n      this.trafficLightRef.current &&\n      getComputedTranslateY(this.trafficLightRef.current) >= HERO_CLIENT_Y\n    ) {\n      this.props.onLose();\n      this.setState({ isHit: true });\n    }\n  };\n  trafficLoop = () => {\n    const rand = Math.round(Math.random() * 6000) + 3000;\n    this.timeout = setTimeout(() => {\n      this.createTraffic();\n      this.trafficLoop();\n    }, rand);\n  };\n\n  createTraffic = () => {\n    const { heroState, gameState } = this.props;\n    if (gameState === 1 && heroState === 1) {\n      this.setState({\n        trafficLightId: this.state.trafficLightId + 1,\n        isHit: false\n      });\n    }\n  };\n\n  render() {\n    const trafficTypes = [\"green\", \"red\", \"yellow\"];\n    const { trafficLightId, trafficType, isHit } = this.state;\n    const { heroState } = this.props;\n    return (\n      <div\n        className={[\n          \"trafficlight\",\n          trafficLightId > 0 ? \"\" : \"hidden\",\n          heroState === 1 ? \"running\" : \"paused\",\n          trafficTypes[trafficType],\n          isHit ? \"twinkling\" : \"\"\n        ].join(\" \")}\n        key={trafficLightId}\n        ref={this.trafficLightRef}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport \"./styles/App.scss\";\nimport Hero from \"./components/Hero\";\nimport Road from \"./components/Road\";\nimport Participants from \"./components/Participants\";\nimport TrafficLight from \"./components/TrafficLight\";\nimport { MAX_LIFE_NUMBER, HIT_INTERVAL } from \"./config\";\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      gameState: -1, // 0结束，1行驶，-1未开始\n      heroPos: 0, // 0左，1右\n      heroState: 1, // 0停止，1行驶\n      lifeInformer: MAX_LIFE_NUMBER,\n      isHit: false,\n      kilometers: 0\n    };\n    this.loseLife = this.throttledChangeInformer();\n    this.intervalId = null;\n  }\n\n  componentDidMount() {\n    this.increseKilometers();\n  }\n  componentWillUnmount() {\n    this.intervalId && clearInterval(this.intervalId);\n  }\n  increseKilometers = () => {\n    this.intervalId = setInterval(() => {\n      if (this.state.gameState === 1 && this.state.heroState === 1) {\n        this.setState({ kilometers: this.state.kilometers + 1 });\n      }\n    }, 2000);\n  };\n\n  throttledChangeInformer = () => {\n    let canRun = true;\n    return () => {\n      if (!canRun) return;\n      canRun = false;\n      this.setState({ isHit: true });\n      if (this.state.lifeInformer <= 0) {\n        this.gameOver();\n      }\n      this.setState({\n        lifeInformer: this.state.lifeInformer - 1\n      });\n      setTimeout(() => {\n        canRun = true;\n        this.setState({\n          isHit: false\n        });\n      }, HIT_INTERVAL);\n    };\n  };\n  gameOver = () => {\n    this.setState({ gameState: 0 });\n  };\n  startGame = () => {\n    this.setState({ gameState: 1 });\n  };\n  restartGame = () => {\n    this.setState({\n      gameState: 1,\n      heroPos: 0, // 0左，1右\n      heroState: 1, // 0停止，1行驶\n      lifeInformer: MAX_LIFE_NUMBER,\n      isHit: false,\n      kilometers: 0\n    });\n  };\n  render() {\n    const {\n      gameState,\n      heroState,\n      heroPos,\n      lifeInformer,\n      isHit,\n      kilometers\n    } = this.state;\n    return (\n      <div>\n        <div className=\"container\">\n          <Road heroState={heroState} />\n          {gameState === 1 && <div className=\"informer\">{kilometers}</div>}\n          <Hero\n            isHit={isHit}\n            gameState={gameState}\n            heroState={heroState}\n            heroPos={heroPos}\n            lifeInformer={lifeInformer}\n            onStateChange={state => {\n              this.setState({ heroState: state });\n            }}\n            onPosChange={pos => {\n              this.setState({ heroPos: pos });\n            }}\n          />\n          <TrafficLight\n            gameState={gameState}\n            heroState={heroState}\n            onLose={this.loseLife}\n            onGameOver={this.gameOver}\n          />\n          <Participants\n            gameState={gameState}\n            heroPos={heroPos}\n            heroState={heroState}\n            onLose={this.loseLife}\n            onGameOver={this.gameOver}\n          />\n          {gameState === -1 && (\n            <div className=\"startgame\" onClick={this.startGame} />\n          )}\n          {gameState === 0 && (\n            <div className=\"gameover\">\n              <ul>\n                {/* <li className=\"title\">游戏结束</li> */}\n                <li>你的成绩：{kilometers} km</li>\n                <li onClick={this.restartGame}>\n                  <span className=\"restartgame\" />\n                </li>\n              </ul>\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles/index.css\";\nimport App from \"./App.js\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}