{"version":3,"sources":["components/Hero.js","config/index.js","components/Road.js","components/Participants.js","components/TrafficLight.js","App.js","serviceWorker.js","index.js"],"names":["Hero","document","addEventListener","this","handleKeyDown","bind","removeEventListener","e","_this$props","props","heroPos","heroState","preventDefault","keyCode","onPosChange","Math","max","min","onStateChange","_this$props2","isHit","gameState","lifeInformer","react_default","a","createElement","className","join","concat","React","Component","HERO_HEIGHT","CLIENT_HEIGHT","window","innerHeight","HERO_CLIENT_Y","MAX_PAITICIPANTS_NUMBER","MAX_LIFE_NUMBER","HIT_INTERVAL","INITIAL_SPEED","Road","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","mainLoop","time","requestAnimationFrame","roadRef","current","top","getBoundingClientRect","speed","extraSpeed","style","updateCols","_this$state","state","roadCol1","roadCol5","unshift","key","pop","getRandomClassName","setState","roadCol2","Array","fill","map","_","i","roadCol4","createRef","_this$state2","ref","r","random","Participants","trafficLoop","rand","round","timeout","setTimeout","createTraffic","currentCarId","participants","length","toConsumableArray","onFinish","id","filter","pid","onLose","lastTime","_this2","cars","Participants_Car","carId","Car","_this3","y","carRef","carPos","carSpeed","animationId","floor","cancelAnimationFrame","TrafficLight","trafficType","trafficLightId","trafficLightRef","inScreen","intervalId","setInterval","App","increseKilometers","kilometers","throttledChangeInformer","canRun","type","console","log","gameOver","startGame","restartGame","loseLife","clearInterval","Road_Road","Hero_Hero","pos","TrafficLight_TrafficLight","onGameOver","Participants_Participants","onClick","Boolean","location","hostname","match","ReactDOM","render","App_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a24cfe54.chunk.js","sourcesContent":["import React from \"react\";\n\nexport default class Hero extends React.Component {\n  componentDidMount() {\n    document.addEventListener(\"keydown\", this.handleKeyDown.bind(this), false);\n  }\n  componentWillUnmount() {\n    document.removeEventListener(\"keydown\", this.handleKeyDown.bind(this));\n  }\n  handleKeyDown(e) {\n    const { heroPos, heroState } = this.props;\n    e.preventDefault();\n    switch (e.keyCode) {\n      case 37: // 左\n        heroState === 1 && this.props.onPosChange(Math.max(0, heroPos - 1));\n        break;\n      case 39: // 右\n        heroState === 1 && this.props.onPosChange(Math.min(heroPos + 1, 1));\n        break;\n      case 38: // 上\n        this.props.onStateChange(1);\n        break;\n      case 40: // 下\n        this.props.onStateChange(0);\n        break;\n      default:\n        break;\n    }\n  }\n  render() {\n    const { heroPos, isHit, gameState, lifeInformer } = this.props;\n    return (\n      <div\n        className={[\n          \"hero\",\n          heroPos === 0 ? \"left\" : \"right\",\n          isHit ? \"twinkling\" : \"\",\n          gameState === 1 ? \"\" : \"hidden\"\n        ].join(\" \")}\n      >\n        <div className={`life life${lifeInformer}`} />\n      </div>\n    );\n  }\n}\n","export const HERO_HEIGHT = 90;\nexport const CLIENT_HEIGHT = Math.min(window.innerHeight, 640);\nexport const HERO_CLIENT_Y = CLIENT_HEIGHT - HERO_HEIGHT;\nexport const MAX_PAITICIPANTS_NUMBER = 3;\nexport const MAX_LIFE_NUMBER = 3;\nexport const HIT_INTERVAL = 1000;\nexport const INITIAL_SPEED = 3;\n","import React from \"react\";\nimport { INITIAL_SPEED } from \"../config\";\nexport default class Road extends React.Component {\n  constructor(props) {\n    super(props);\n    const roadCol2 = new Array(10)\n      .fill(0)\n      .map((_, i) => <div key={i} className=\"road-block road-block-road1\" />);\n    const roadCol4 = new Array(10)\n      .fill(0)\n      .map((_, i) => <div key={i} className=\"road-block road-block-road3\" />);\n    const roadCol1 = new Array(10)\n      .fill(0)\n      .map((_, i) => <div key={i} className={getRandomClassName()} />);\n    const roadCol5 = new Array(10)\n      .fill(0)\n      .map((_, i) => <div key={i} className={getRandomClassName()} />);\n\n    this.state = {\n      roadCol1,\n      roadCol2,\n      roadCol4,\n      roadCol5\n    };\n    this.roadRef = React.createRef();\n  }\n  componentDidMount() {\n    requestAnimationFrame(this.mainLoop);\n  }\n\n  mainLoop = time => {\n    requestAnimationFrame(this.mainLoop);\n    if (this.props.heroState === 1 && this.roadRef.current) {\n      const top = this.roadRef.current.getBoundingClientRect().top;\n      const speed = INITIAL_SPEED + this.props.extraSpeed;\n      this.roadRef.current.style.top = top + speed + \"px\";\n      if (top >= 0) {\n        this.updateCols();\n        this.roadRef.current.style.top = \"-128px\";\n      }\n    }\n  };\n\n  updateCols = () => {\n    let { roadCol1, roadCol5 } = this.state;\n    roadCol1.unshift(\n      <div key={roadCol1.pop().key} className={getRandomClassName()} />\n    );\n    roadCol5.unshift(\n      <div key={roadCol5.pop().key} className={getRandomClassName()} />\n    );\n    this.setState({ roadCol1, roadCol5 });\n  };\n\n  render() {\n    const { roadCol5, roadCol1, roadCol2, roadCol4 } = this.state;\n    return (\n      <div className=\"road\" ref={this.roadRef}>\n        <div className=\"road-col road-col-1\">{roadCol1}</div>\n        <div className=\"road-col road-col-2\">{roadCol2}</div>\n        <div className=\"road-col road-col-3\" />\n        <div className=\"road-col road-col-4\">{roadCol4}</div>\n        <div className=\"road-col road-col-5\">{roadCol5}</div>\n      </div>\n    );\n  }\n}\nconst getRandomClassName = () => {\n  const r = Math.random();\n  if (r < 0.3) {\n    return \"road-block road-block-tree1\";\n  } else if (r < 0.6) {\n    return \"road-block road-block-tree2\";\n  } else if (r < 0.7) {\n    return \"road-block road-block-tent\";\n  } else {\n    return \"road-block\";\n  }\n};\n","import React from \"react\";\nimport {\n  HERO_CLIENT_Y,\n  CLIENT_HEIGHT,\n  HERO_HEIGHT,\n  MAX_PAITICIPANTS_NUMBER,\n  INITIAL_SPEED\n} from \"../config\";\n// const fps = 30;\nexport default class Participants extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      participants: [],\n      currentCarId: 0\n    };\n    this.lastTime = 0;\n  }\n\n  componentDidMount() {\n    this.trafficLoop();\n  }\n\n  trafficLoop = () => {\n    const rand = Math.round(Math.random() * 6000) + 1000;\n    this.timeout = setTimeout(() => {\n      this.createTraffic();\n      this.trafficLoop();\n    }, rand);\n  };\n\n  createTraffic = () => {\n    const { gameState } = this.props;\n    const { currentCarId, participants } = this.state;\n    if (gameState === 1 && participants.length < MAX_PAITICIPANTS_NUMBER) {\n      this.setState({\n        participants: [...participants, currentCarId + 1],\n        currentCarId: currentCarId + 1\n      });\n    }\n  };\n\n  onFinish = id => {\n    this.setState({\n      participants: this.state.participants.filter(pid => pid !== id)\n    });\n  };\n\n  onLose = id => {\n    this.onFinish(id);\n    this.props.onLose(\"crash\");\n  };\n\n  render() {\n    const { participants } = this.state;\n    const cars = participants.map(pid => (\n      <Car\n        carId={pid}\n        key={pid}\n        onFinish={this.onFinish}\n        onLose={this.onLose}\n        extraSpeed={this.props.extraSpeed}\n        heroPos={this.props.heroPos}\n        heroState={this.props.heroState}\n      />\n    ));\n    return <div>{cars}</div>;\n  }\n}\n\nclass Car extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      carSpeed: Math.random() * 2 + 1,\n      carPos: Math.floor(Math.random() * 2),\n      isHit: false\n    };\n    this.carRef = React.createRef();\n    this.animationId = null;\n  }\n  componentDidMount() {\n    this.animationId = requestAnimationFrame(this.mainLoop);\n  }\n  componentWillUnmount() {\n    this.animationId && cancelAnimationFrame(this.animationId);\n  }\n  mainLoop = () => {\n    const y = this.carRef.current.getBoundingClientRect().top;\n    if (y >= CLIENT_HEIGHT) {\n      this.props.onFinish(this.props.carId);\n    } else if (\n      this.state.carPos === this.props.heroPos &&\n      y >= HERO_CLIENT_Y - HERO_HEIGHT\n    ) {\n      this.props.onLose(this.props.carId);\n    } else {\n      let top = y + this.state.carSpeed + this.props.extraSpeed;\n      if (this.props.heroState === 1) {\n        top += INITIAL_SPEED;\n      }\n      this.carRef.current.style.top = top + \"px\";\n      this.animationId = requestAnimationFrame(this.mainLoop);\n    }\n  };\n\n  render() {\n    const posList = [\"left\", \"right\"];\n    const { carPos } = this.state;\n    return <div className={`car ${posList[carPos]}`} ref={this.carRef} />;\n  }\n}\n","import React from \"react\";\nimport { HERO_CLIENT_Y, INITIAL_SPEED, CLIENT_HEIGHT } from \"../config\";\nexport default class TrafficLight extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      trafficType: 0, // 0绿灯，1红灯，2黄灯\n      trafficLightId: 0,\n      inScreen: false\n    };\n    this.trafficLightRef = React.createRef();\n    this.intervalId = null;\n  }\n  componentDidMount() {\n    this.trafficLoop();\n    requestAnimationFrame(this.mainLoop);\n    setInterval(() => {\n      this.setState({\n        trafficType: (this.state.trafficType + 1) % 3\n      });\n    }, 2000);\n  }\n  componentWillUnmount() {}\n\n  mainLoop = time => {\n    requestAnimationFrame(this.mainLoop);\n    const { heroState, gameState } = this.props;\n    const { trafficType, trafficLightId } = this.state;\n    if (\n      gameState === 1 &&\n      heroState === 1 &&\n      trafficLightId > 0 &&\n      this.trafficLightRef.current\n    ) {\n      const top = this.trafficLightRef.current.getBoundingClientRect().top;\n      const speed = INITIAL_SPEED + this.props.extraSpeed;\n      this.trafficLightRef.current.style.top = top + speed + \"px\";\n      if (top >= CLIENT_HEIGHT) {\n        this.setState({ inScreen: false });\n      } else if (trafficType !== 0 && top >= HERO_CLIENT_Y) {\n        this.props.onLose(\"traffic light\");\n      }\n    }\n  };\n  trafficLoop = () => {\n    const rand = Math.round(Math.random() * 6000) + 3000;\n    this.timeout = setTimeout(() => {\n      this.createTraffic();\n      this.trafficLoop();\n    }, rand);\n  };\n\n  createTraffic = () => {\n    const { heroState, gameState } = this.props;\n    const { inScreen } = this.state;\n    if (gameState === 1 && heroState === 1 && !inScreen) {\n      this.setState({\n        trafficLightId: this.state.trafficLightId + 1,\n        inScreen: true\n      });\n    }\n  };\n\n  render() {\n    const trafficTypes = [\"green\", \"red\", \"yellow\"];\n    const { trafficLightId, trafficType } = this.state;\n    const { heroState } = this.props;\n    return (\n      <div\n        className={[\n          \"trafficlight\",\n          trafficLightId > 0 ? \"\" : \"hidden\",\n          heroState === 1 ? \"running\" : \"paused\",\n          trafficTypes[trafficType]\n        ].join(\" \")}\n        key={trafficLightId}\n        ref={this.trafficLightRef}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport \"./styles/App.scss\";\nimport Hero from \"./components/Hero\";\nimport Road from \"./components/Road\";\nimport Participants from \"./components/Participants\";\nimport TrafficLight from \"./components/TrafficLight\";\nimport { MAX_LIFE_NUMBER, HIT_INTERVAL } from \"./config\";\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      gameState: -1, // 0结束，1行驶，-1未开始\n      heroPos: 0, // 0左，1右\n      heroState: 1, // 0停止，1行驶\n      lifeInformer: MAX_LIFE_NUMBER,\n      isHit: false,\n      kilometers: 0\n    };\n    this.loseLife = this.throttledChangeInformer();\n    this.intervalId = null;\n  }\n\n  componentDidMount() {\n    this.increseKilometers();\n  }\n  componentWillUnmount() {\n    this.intervalId && clearInterval(this.intervalId);\n  }\n  increseKilometers = () => {\n    this.intervalId = setInterval(() => {\n      if (this.state.gameState === 1 && this.state.heroState === 1) {\n        this.setState({ kilometers: this.state.kilometers + 1 });\n      }\n    }, 2000);\n  };\n\n  throttledChangeInformer = () => {\n    let canRun = true;\n    return type => {\n      if (!canRun) return;\n      canRun = false;\n      console.log(\"IS HIT\", type);\n      this.setState({ isHit: true });\n      if (this.state.lifeInformer <= 0) {\n        this.gameOver();\n      }\n      this.setState({\n        lifeInformer: this.state.lifeInformer - 1\n      });\n      setTimeout(() => {\n        canRun = true;\n        this.setState({\n          isHit: false\n        });\n      }, HIT_INTERVAL);\n    };\n  };\n  gameOver = () => {\n    this.setState({ gameState: 0 });\n  };\n  startGame = () => {\n    this.setState({ gameState: 1 });\n  };\n  restartGame = () => {\n    this.setState({\n      gameState: 1,\n      heroPos: 0, // 0左，1右\n      heroState: 1, // 0停止，1行驶\n      lifeInformer: MAX_LIFE_NUMBER,\n      isHit: false,\n      kilometers: 0\n    });\n  };\n  render() {\n    const {\n      gameState,\n      heroState,\n      heroPos,\n      lifeInformer,\n      isHit,\n      kilometers\n    } = this.state;\n    const extraSpeed = Math.floor(kilometers / 10);\n    return (\n      <div>\n        <div className=\"container\">\n          <Road heroState={heroState} extraSpeed={extraSpeed} />\n          {gameState === 1 && <div className=\"informer\">{kilometers}</div>}\n          <Hero\n            isHit={isHit}\n            gameState={gameState}\n            heroState={heroState}\n            heroPos={heroPos}\n            lifeInformer={lifeInformer}\n            onStateChange={state => {\n              this.setState({ heroState: state });\n            }}\n            onPosChange={pos => {\n              this.setState({ heroPos: pos });\n            }}\n          />\n          <TrafficLight\n            gameState={gameState}\n            heroState={heroState}\n            extraSpeed={extraSpeed}\n            onLose={this.loseLife}\n            onGameOver={this.gameOver}\n          />\n          <Participants\n            gameState={gameState}\n            heroPos={heroPos}\n            heroState={heroState}\n            extraSpeed={extraSpeed}\n            onLose={this.loseLife}\n            onGameOver={this.gameOver}\n          />\n          {gameState === -1 && (\n            <div className=\"startgame\" onClick={this.startGame} />\n          )}\n          {gameState === 0 && (\n            <div className=\"gameover\">\n              <ul>\n                {/* <li className=\"title\">游戏结束</li> */}\n                <li>你的成绩：{kilometers} km</li>\n                <li onClick={this.restartGame}>\n                  <span className=\"restartgame\" />\n                </li>\n              </ul>\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles/index.css\";\nimport App from \"./App.js\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}